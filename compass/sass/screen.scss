/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "compass/reset";
@import "compass/css3";
@import "compass/utilities/general/clearfix";


$game-width : 640px;

$board-width : 320px;
$board-height : 320px;
$board-padding : 5px;

$piece-columns : 10;
$piece-rows : 10;
$piece-size : ($board-width - $board-padding * 2) / $piece-columns;

$deck-width : 480px;
$deck-height : 160px;

$player0-base-color: #2A7CFF;
$player1-base-color: #FFD12A;
$player2-base-color: #46FF2A;
$player3-base-color: #FF2A46;

a.button {
	display: block;
	@include border-radius(8px, 8px);
	@include background-image(linear-gradient(top, white, #d0d0d0));
	padding: 35px 0px 0px 38px;
	// width: 140px;
	// height: 100px;
	cursor: pointer;
	font-size: 30px;
	@include text-shadow(rgba(black, 0.5) 1px 1px 0);
	@include box-sizing(border-box);
	@include box-shadow(
		rgba(white, 0.3) -0px -0px 1px 1px inset,
		rgba(black, 0.3) 0px 0px 0px 1px
	);
	&:hover {
		@include scale(1.02);
	}
	&:active {
		@include scale(1.0);
	}
}

*[class$="template"] {
	display: none;
}
body {
	overflow: hidden;
	background-color: #006958;
}
div.game-container {
	width:640px;
	height:960px;
	@include background-image(linear-gradient(top, #00967d, #006958));
}
div.board-container {
	position:absolute;
	width:$game-width;
	height:$game-width;

	div.board {
		width:$board-width;
		height:$board-height;
		padding:$board-padding;
		border:1px black solid;
		@include box-sizing(border-box);
		@include border-radius(4px, 4px);
		@include background-image(linear-gradient(top, #404040, #000000));
		margin:$deck-height;

		div.board-inner {
			@include clearfix;
			
			div.pieces, div.base-pieces{
				position: absolute;
				width:$board-width - $board-padding * 2;
				height:$board-height - $board-padding * 2;
			}

			div.piece {
				width:$piece-size;
				height:$piece-size;
				display:inline-block;
				float: left;

				&:nth-of-type(10n+1) {
					clear: both;
				}
			}

			div.base-pieces {
				@include background-image(linear-gradient(top, #b0b0b0, #606060));
				div.piece {
					@include background-image(linear-gradient(top, rgba(white, 0.2), rgba(white, 0.1)));
					@include box-shadow(rgba(white, 0.3) -0px -0px 1px 1px inset, rgba(black, 0.3) 1px 1px 2px 2px inset);

					&.highlight {
						&:after {
							content:"";
							width:10px;
							height:10px;
							background-color: rgba(white, 0.5);
							display:block;
							@include border-radius(5px, 5px);
							margin: $piece-size / 2 - 5px;
							// TODO:画像でよくね？
						}
					}
				}
			}

			@mixin player_piece($base-color) {
				@include border-radius(4px, 4px);
				@include box-shadow(
					rgba($base-color, 0.7) 0px 0px 0px 3px inset
				);
				background-color:white;
			}

			div.pieces {
				@include box-shadow(rgba(black, 0.5) 0px 0px 2px 2px, rgba(black, 0.8) 0px 0px 2px 2px inset);
				div.piece {
					@include background-size($piece-size, $piece-size);

					&:hover {
						cursor:pointer;
					}

					// playerごとの見た目					
					&.player_0 {
						@include player_piece($player0-base-color);
					}
					&.player_1 {
						@include player_piece($player1-base-color);
					}
					&.player_2 {
						@include player_piece($player2-base-color);
					}
					&.player_3 {
						@include player_piece($player3-base-color);
					}

					// 角度ごとの見た目
					&.rotate_0 {
						@include rotate(0deg);
					}
					&.rotate_1 {
						@include rotate(90deg);
					}
					&.rotate_2 {
						@include rotate(180deg);
					}
					&.rotate_3 {
						@include rotate(270deg);
					}

					&.draft {
						@include player_piece(rgba(black, 0.8));
					}
					// 種類ごとの見た目
					&.type_straight		{background-image: url(../images/piece_straight.png);}
					&.type_right_curve	{background-image: url(../images/piece_right_curve.png);}
					&.type_left_curve	{background-image: url(../images/piece_left_curve.png);}
					&.type_right_turn	{
						@include background-size($piece-size * 2, $piece-size);
						background-image: url(../images/piece_right_turn.png);
					}
					&.type_left_turn	{
						@include background-size($piece-size * 2, $piece-size);
						background-image: url(../images/piece_left_turn.png);
					}
					&.type_side_branch	{background-image: url(../images/piece_side_branch.png);}
					&.type_triple_branch	{background-image: url(../images/piece_triple_branch.png);}
					&.type_block			{background-image: url(../images/piece_block.png);}

					// 2マスピース用の位置調整
					&.pos_x_1	{
						background-position-x: -$piece-size;
					}
				}
			}
		}
	}
}

div.decks {
	position:absolute;
	div.deck-container {
		position:absolute;
		@include transform-origin($game-width / 2, $game-width /2);

		/* 各プレイヤdeck */
		@mixin deck($base-color) {
			div.deck-piece {
				@include box-shadow(
					rgba($base-color, 1.0) 0px 0px 0px 3px,
					rgba(white, 1.0) 0px 0px 0px 4px
				);
			}
			div.deck {
				background-color:$base-color;
			}
		}	
		&.deck0{
			@include rotate(0deg);
			@include deck($player0-base-color);
		}
		&.deck1{
			@include rotate(90deg);
			@include deck($player1-base-color);
		}
		&.deck2{
			@include rotate(180deg);
			@include deck($player2-base-color);
		}
		&.deck3{
			@include rotate(270deg);
			@include deck($player3-base-color);
		}

		/* 共通deck */
		div.deck {
			width: $deck-width;
			height: $deck-height;
			position:absolute;
			top:$board-width + $deck-height;
			left: $deck-height;
			@include background-image(linear-gradient(top, rgba(white, 0.1), rgba(white, 0.0)));
			@include border-radius(4px, 4px);


			div.deck-damages {
				width: 100%;
				background-color: rgba(white, 0.5);
				height: 20px;
				@include border-top-radius(4px);

				div.damage {
					display:inline-block;
					background-color: red;
					background-image: url(../images/piece_block.png);
					@include background-size(16px);
					width:16px;
					height:16px;
					margin:2px 0px 0px 2px;
				}
			}

			div.deck-pieces {
				display: inline-block;
				width:$board-width - 10px;
				// height:$deck-height;
				line-height: 0px;
				overflow-x:hidden;
				overflow-y:auto;
				margin: 10px 0px 10px 10px;
				padding-right: 10px;
				float: left;
				border-right: 1px dashed white;

				div.deck-piece {
					display:inline-block;
					margin:6px;
					width:30px;
					height:30px;
					@include border-radius(2px, 2px);
					background-color:white;
					@include background-size(30px);

					&.focus {
						@include box-shadow(
							rgba(black, 1.0) 0px 0px 0px 3px,
							rgba(red, 1.0) 0px 0px 0px 5px
						);
					}

					&.disabled {
						@include opacity(0.15);
						@include box-shadow(
							rgba(black, 0.5) 0px 0px 0px 3px,
							rgba(white, 1.0) 0px 0px 0px 5px
						);
					}

					&:hover {
						cursor: pointer;
						@include scale(1.1);
					}

					&.type_straight		{background-image: url(../images/piece_straight.png);}
					&.type_right_curve	{background-image: url(../images/piece_right_curve.png);}
					&.type_left_curve	{background-image: url(../images/piece_left_curve.png);}
					&.type_right_turn	{
						width:$piece-size * 2;
						@include background-size($piece-size * 2);
						background-image: url(../images/piece_right_turn.png);
					}
					&.type_left_turn	{
						width:$piece-size * 2;
						@include background-size($piece-size * 2);
						background-image: url(../images/piece_left_turn.png);
					}
					&.type_side_branch	{background-image: url(../images/piece_side_branch.png);}
					&.type_triple_branch	{background-image: url(../images/piece_triple_branch.png);}
					&.type_block			{background-image: url(../images/piece_block.png);}
				}
			}

			div.deck-actions {
				display: inline-block;
				// width: 140px;
				// height: 100px;
				margin: 10px;
				float: left;

				&:after {
					content:"";
					clear:both;
				}
			}

		}

		&.disabled {
			div.deck {
				-webkit-animation-name: none;
				@include box-shadow(
					rgba(black, 0.2) 0px 0px 4px 1px,
					rgba(black, 0.2) 0px 0px 2px 1px inset
				);
			}
			a.button {
				visibility: hidden;
			}
		}

	}
}

